extends layouts/main.pug

block vars
	- var sections = [];
	mixin addSectionItem(title, href)
		- sections.push({ title, href });

block main
	//- Skills
	+addSectionItem('Skills', '#skills')
	section#skills: .container
		h2 Skills
		ul.feature-icons: each group in skills
			li.icon(class=group.class) #[b !{ group.title }:] !{ group.skills }

	//- Project
	+addSectionItem('Projects', '#project')
	section#project: .container
		h2 Projects
		.features: +mx-items(items.projects)

	//- Contributions
	+addSectionItem('Contributions', '#contributions')
	section#contributions: .container
		h2 Contributions
		p I contribute to Open Source
		//- .features: +mx-items(items.contributions)
		ul.contribs.feature-icons: each item in items.contributions
			li.icon.solid.fa-code-branch(style="display: block; width: unset")
				h3= item.title
				p !{ item.content }
				p #[b Technologies:] !{ item.tech }

	//- Hosting
	+addSectionItem('Hosting', '#hosting')
	section#hosting: .container
		h2 Hosting
		p Self hosting provides a great opportuinty to own your own services and to learn
		.features: +mx-items(items.hosting)

mixin mx-items(items)
	each project in items
		article
			a.image(href=project.imageHref)
				each image in project.image
					img(src=image.src, alt=image.alt, title=image.alt)
			.inner
				h4= project.title + (project.context ? ' - ' + project.context : '')
				| !{ project.content }
				p #[b Technologies:] !{ project.tech }

				if project.actions
					| !{ typeof project.actions }
					//- ul.actions: each action of project.actions
						li: a.button(class=action.class, target="_blank", href=action.href)= action.text

block nav
	include imports/nav.pug
